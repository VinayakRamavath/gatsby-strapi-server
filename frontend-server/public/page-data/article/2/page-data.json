{"componentChunkName":"component---src-templates-article-js","path":"/article/2","result":{"data":{"strapiArticle":{"strapiId":2,"title":"Configuring Kafka on Kubernetes","content":"A lot of people struggled to configure Kafka on kubernetes, especially if you want to use it from outside of the cluster. I’ll explain how can we make it. I also wrote a PR to the incubator/Kafka helm chart for enabling it. If it is merged, it might be helpful. I test it on Azure, However, the principal is the same for other cloud platform or on-premise.\n\nWhat is the issue?\nDeploy Kafka cluster on kubrernetes from an external client, you need to access through the Service. It can be NodePorts, LoadBalancer, or ingress controller. Some cloud platform can’t use Node Ports, in this case, we need to use LoadBalancer or ingress. However, this scenario could cause a problem. Let’s see this diagram.\n\nWhen you start talking with Kafka from the external client, You send a request to the Service that has IP Address (12.345.67:31090). Then the Kafka return the endpoint where to access from the client. It should be `12.345.67:31090`. However, you might see something like `kafka-0.kafka-headless.default:9092` that is an internal access point of Kafka from the resources of kubernetes. Then the Kafka client tries to access the endpoint `kafka-0.kafka-headless.default:9092`. It fails because it is not accessible from the outside of the kubernetes.\nWe can use kafkacat for testing it. However, it returns wrong address.\n\nKafka advises the endpoint based on the incoming request of the port number. We also configure advertised.listener and listener.security.protocol.map and listeners and inter.broker.listener.name for enabling it.","published_at":"2020-03-11","image":{"publicURL":"/static/a513a04717d99f8d91261d38b0727289-a35e947e5435a0350b17b7af8fc59f16.jpeg"}}},"pageContext":{"id":2}}}